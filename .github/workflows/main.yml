name: Continuous Integration Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint-and-security-check:
    name: Lint and Security Check
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.extract_image_tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 safety

      - name: Run Python linter (flake8)
        run: flake8 .

      - name: Check Python code security (safety)
        run: safety check

  build-and-push:
    needs: lint-and-security-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Packer
        uses: hashicorp/setup-packer@main
        with:
          packer-version: '1.7.4'

      - name: Initialize Packer
        run: packer init voting-app.pkr.hcl

      - name: Validate Packer configuration
        run: packer validate voting-app.pkr.hcl

      - name: Build the Docker image with Packer
        id: packer_build
        run: |
          packer build -machine-readable voting-app.pkr.hcl | tee output.txt
          IMAGE_TAG=$(grep 'artifact,0,id' output.txt | cut -d, -f6)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myimage:${{ env.IMAGE_TAG }}
